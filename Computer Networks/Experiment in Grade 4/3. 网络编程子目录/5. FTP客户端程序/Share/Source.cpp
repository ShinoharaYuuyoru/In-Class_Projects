#defineWIN32_LEAN_AND_MEAN#defineSTR_MAX_LENGTH1024#defineFTP_PORT"21"#include<iostream>#include<fstream>#include<windows.h>#include<winsock2.h>#include<ws2tcpip.h>#include<stdlib.h>#include<stdio.h>usingnamespacestd;//#pragmacomment(lib,"Ws2_32.lib")intiResult;WSADATAwsaData;SOCKETsock=INVALID_SOCKET;SOCKETdataSock=INVALID_SOCKET;charFTPServerIP[STR_MAX_LENGTH]="";charServerDataIP[STR_MAX_LENGTH]="";charServerDataPort[STR_MAX_LENGTH]="";charCMDType[STR_MAX_LENGTH]="";//ThisisseperatedbyinputedsendBuffer.charCMDParameter[STR_MAX_LENGTH]="";//ThisisseperatedbyinputedsendBuffer.charsendBuffer[STR_MAX_LENGTH]="";charrecvBuffer[STR_MAX_LENGTH]="";voidConnectSock(SOCKET&Sock,char*IP,char*Port);voidgetCMDTypeAndParameter(char*CMD,char*CMDType,char*CMDParameter);voidSendAndRecv(SOCKET&Sock,char*sendbuff,char*recvbuff);voidWriteFile(SOCKET&Sock,char*CMDParameter,char*recvbuff);voidReadFile(SOCKET&Sock,char*CMDParameter,char*sendbuff);voidGetDataIPAndPort(char*recvbuff,char*ServerDataIP,char*ServerDataPort);intmain(){printf("*****ThisProgramisbasedonFileZillaFTPServer.PleaseinstallFileZillabeforetestthisprogram.*****\n");printf("Client:PleaseinputFTPServerIP:");gets_s(FTPServerIP);//InitialiResult=WSAStartup(MAKEWORD(2,2),&wsaData);if(iResult!=0){printf("Client:WSAStartupfailedwitherror:%d\n",iResult);return1;}//ConnectConnectSock(sock,FTPServerIP,FTP_PORT);//Port21toFTPiResult=recv(sock,recvBuffer,STR_MAX_LENGTH,0);if(iResult>0){printf("Server:%s\n",recvBuffer);}iResult=recv(sock,recvBuffer,STR_MAX_LENGTH,0);if(iResult>0){printf("Server:%s\n",recvBuffer);}//StartFTPClientwhile(1){ZeroMemory(sendBuffer,STR_MAX_LENGTH);ZeroMemory(recvBuffer,STR_MAX_LENGTH);printf("Client:Pleaseinputcommand.IfyouwanttoSTORorRETR,pleaserunPASVfirst:");gets_s(sendBuffer);getCMDTypeAndParameter(sendBuffer,CMDType,CMDParameter);strcat(sendBuffer,"\r\n");if(strcmp(CMDType,"USER")==0){SendAndRecv(sock,sendBuffer,recvBuffer);}elseif(strcmp(CMDType,"PASS")==0){SendAndRecv(sock,sendBuffer,recvBuffer);}elseif(strcmp(CMDType,"RETR")==0)//DownloadthefilefromServer{ConnectSock(dataSock,ServerDataIP,ServerDataPort);iResult=send(sock,sendBuffer,strlen(sendBuffer),0);if(iResult<=0){printf("Client:senderror.\n");return1;}ZeroMemory(recvBuffer,STR_MAX_LENGTH);iResult=recv(sock,recvBuffer,STR_MAX_LENGTH,0);if(iResult>0){printf("Server:%s",recvBuffer);}else{printf("Client:receiveerror.\n");}WriteFile(dataSock,CMDParameter,recvBuffer);ZeroMemory(recvBuffer,STR_MAX_LENGTH);iResult=recv(sock,recvBuffer,STR_MAX_LENGTH,0);if(iResult>0){printf("Server:%s",recvBuffer);}else{printf("Client:receiveerror.\n");}}elseif(strcmp(CMDType,"STOR")==0)//StoreafiletoServer{ConnectSock(dataSock,ServerDataIP,ServerDataPort);iResult=send(sock,sendBuffer,strlen(sendBuffer),0);if(iResult<=0){printf("Client:senderror.\n");}ZeroMemory(recvBuffer,STR_MAX_LENGTH);iResult=recv(sock,recvBuffer,STR_MAX_LENGTH,0);if(iResult>0){printf("Server:%s",recvBuffer);}else{printf("Client:receiveerror.\n");}ReadFile(dataSock,CMDParameter,recvBuffer);ZeroMemory(recvBuffer,STR_MAX_LENGTH);iResult=recv(sock,recvBuffer,STR_MAX_LENGTH,0);if(iResult>0){printf("Server:%s",recvBuffer);}else{printf("Client:receiveerror.\n");}}elseif(strcmp(CMDType,"PASV")==0)//ThisisPassivityMode.{SendAndRecv(sock,sendBuffer,recvBuffer);GetDataIPAndPort(recvBuffer,ServerDataIP,ServerDataPort);}elseif(strcmp(CMDType,"QUIT")==0)//QUIT{SendAndRecv(sock,sendBuffer,recvBuffer);break;}}//Cleanupclosesocket(sock);WSACleanup();return0;}voidConnectSock(SOCKET&Sock,char*IP,char*Port){intiResult;structaddrinfo*SockAddrInfo=NULL;structaddrinfohints;ZeroMemory(&hints,sizeof(hints));hints.ai_family=AF_INET;hints.ai_socktype=SOCK_STREAM;hints.ai_protocol=IPPROTO_TCP;iResult=getaddrinfo(IP,Port,&hints,&SockAddrInfo);if(iResult!=0){printf("getaddrinfofailedwitherror:%d\n",iResult);return;}Sock=socket(SockAddrInfo->ai_family,SockAddrInfo->ai_socktype,SockAddrInfo->ai_protocol);iResult=connect(Sock,SockAddrInfo->ai_addr,(int)SockAddrInfo->ai_addrlen);if(iResult!=SOCKET_ERROR){printf("ConnectSuccessful.\n");}}//SeperateinputedCommandtoCommandTypeandCommandParameter.voidgetCMDTypeAndParameter(char*CMD,char*CMDType,char*CMDParameter){inti,j;for(i=0;CMD[i]!=0;i++){CMDType[i]=CMD[i];if(CMD[i]==''){CMDType[i]='\0';break;}}if(CMD[i]==0)//OnlyhaveCommandType{CMDType[i]='\0';CMDParameter[0]='\0';}else//CommandTypewithParameter.{i++;//Jumpthespacetoparameter.for(j=0;CMD[i+j]!=0;j++){CMDParameter[j]=CMD[i+j];}CMDParameter[j]='\0';}}//SendandReceive.voidSendAndRecv(SOCKET&Sock,char*sendbuff,char*recvbuff){iResult=send(Sock,sendbuff,strlen(sendbuff),0);if(iResult<=0){printf("Client:senderror.\n");return;}ZeroMemory(recvbuff,STR_MAX_LENGTH);iResult=recv(Sock,recvbuff,STR_MAX_LENGTH,0);if(iResult>0){printf("Server:%s",recvbuff);}else{printf("Client:receiveerror.\n");return;}}//Writethefiledownloadedfromserver.voidWriteFile(SOCKET&Sock,char*CMDParameter,char*recvbuff){ofstreamOutFile(CMDParameter);while(1){ZeroMemory(recvbuff,STR_MAX_LENGTH);iResult=recv(Sock,recvbuff,STR_MAX_LENGTH,0);if(iResult>0){OutFile<<recvbuff;}elseif(iResult==0){printf("Client:DataConnectionclosed.\n");break;}else{printf("Client:recvfailedwitherror:%d\n",WSAGetLastError());break;}}OutFile.close();closesocket(Sock);}//ReadthefileuploadedtoServer.voidReadFile(SOCKET&Sock,char*CMDParameter,char*sendbuff){ZeroMemory(sendbuff,STR_MAX_LENGTH);ifstreamInFile(CMDParameter);while(InFile.eof()!=1){InFile>>sendbuff;iResult=send(Sock,sendbuff,strlen(sendbuff),0);if(iResult==SOCKET_ERROR){printf("Client:sendfailedwitherror:%d.\n",WSAGetLastError());closesocket(Sock);WSACleanup();return;}}InFile.close();closesocket(Sock);}//InPassivityMode,getDataIPandPort.voidGetDataIPAndPort(char*recvbuff,char*ServerDataIP,char*ServerDataPort){inti,j;intcount=0;intPortheader,Porttailer;charPorthead[10];charPorttail[10];for(i=0;recvbuff[i]!=0;i++){if(recvbuff[i]=='('){i++;break;}}for(j=0;recvbuff[i+j]!=0;j++){ServerDataIP[j]=recvbuff[i+j];if(recvbuff[i+j]==','){ServerDataIP[j]='.';count++;}if(count==4){ServerDataIP[j]=0;i=i+j+1;break;}}for(j=0;recvbuff[i+j]!=0;j++){Porthead[j]=recvbuff[i+j];if(recvbuff[i+j]==','){Porthead[j]=0;i=i+j+1;break;}}for(j=0;recvbuff[i+j]!=0;j++){Porttail[j]=recvbuff[i+j];if(recvbuff[i+j]==')'){Porttail[j]=0;i=i+j+1;break;}}Porttail[j]=0;Portheader=atoi(Porthead);Porttailer=atoi(Porttail);itoa(Portheader*256+Porttailer,ServerDataPort,10);}